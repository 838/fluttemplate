{
  "Freezed Model Class": {
    "prefix": "fmc",
    "body": [
      "import '../../../core/index.dart';",
      "",
      "part '${TM_FILENAME_BASE}.freezed.dart';",
      "part '${TM_FILENAME_BASE}.g.dart';",
      "",
      "@freezedExcludeUnion",
      "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} with _$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} {",
      "\tconst factory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}({",
      "\t\t$0",
      "\t}) = _${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g};",
      "",
      "\tfactory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}.fromJson(Map<String, dynamic> json) => _$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}FromJson(json);",
      "}",
    ]
  },
  "Redux Action sets": {
    "prefix": "ras",
    "body": [
      "class $1${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} extends ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} {",
      "\tconst $1${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}($4);",
      "",
      "\t$3",
      "",
      "\t@override",
      "\tString toString() => '$1${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}$5';",
      "}",
      "",
      "class $1Success${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} extends ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} {",
      "\tconst $1Success${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}($7);",
      "",
      "\t$6",
      "",
      "\t@override",
      "\tString toString() => '$1Success${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}$8';",
      "}",
      "",
      "class $1Fail${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} extends Fail${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} {",
      "\tconst $1Fail${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}(",
      "\t\tsuper.title, {",
      "\t\tsuper.message,",
      "\t});",
      "",
      "\t@override",
      "\tString toString() => '$1Fail${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}';",
      "}",
    ]
  },
  "Redux Middleware Class": {
    "prefix": "rmc",
    "body": [
      "import '../../../core/index.dart';",
      "import 'index.dart';",
      "",
      "@lazySingleton",
      "class ${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Middleware implements EpicClass<AppState> {",
      "\tconst ${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Middleware(",
      "\t\tthis._${TM_FILENAME_BASE/([^.]+).*/${1:/lowercase}/}Service,",
      "\t);",
      "",
      "\tfinal ${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Service _${TM_FILENAME_BASE/([^.]+).*/${1:/lowercase}/}Service;",
      "",
      "\t@override",
      "\tStream<AppAction> call(Stream<dynamic> actions, EpicStore<AppState> store) => MergeStream([",
      "",
      "\t]);",
      "}",
    ]
  },
  "Redux Middleware Method": {
    "prefix": "rmm",
    "body": [
      "Stream<${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Action> _$1(",
      "\tStream<$2${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Action> actions,",
      "\tEpicStore<AppState> store,",
      ") =>",
      "\t\tactions.switchMap(",
      "\t\t\t(action) => _service",
      "\t\t\t\t\t\t.$3",
      "\t\t\t\t\t\t.asStream()",
      "\t\t\t\t\t\t.map<${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Action>((result) => $2Success${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Action(result))",
      "\t\t\t\t\t\t.onErrorReturnWith((error, _) {",
      "\t\t\t\t\t_log.e(error);",
      "\t\t\t\t\treturn const $2Fail${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Action();",
      "\t\t\t\t}),",
      "\t\t\t);",
    ]
  },
  "Redux reducer": {
    "prefix": "rr",
    "body": [
      "${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}State _$1(",
      "\t${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}State state,",
      "\t${2:action}${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Action action,",
      ") =>",
      "\t\tstate.copyWith(",
      "\t\t\t$0",
      "\t\t);",
    ]
  },
  "Redux reducer set": {
    "prefix": "rrs",
    "body": [
      "// TypedReducer(_$1),",
      "// TypedReducer(_$1Success),",
      "// TypedReducer(_$1Fail),",
      "",
      "${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}State _$1(",
      "\t${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}State state,",
      "\t${2:action}${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Action action,",
      ") =>",
      "\t\tstate.copyWith(",
      "\t\t\tloading: true,",
      "\t\t\t$3",
      "\t\t);",
      "",
      "${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}State _$1Success(",
      "\t${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}State state,",
      "\t${2:action}Success${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Action action,",
      ") =>",
      "\t\tstate.copyWith(",
      "\t\t\tloading: false,",
      "\t\t\t$4",
      "\t\t);",
      "",
      "${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}State _$1Fail(",
      "\t${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}State state,",
      "\t${2:action}Fail${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Action action,",
      ") =>",
      "\t\tstate.copyWith(",
      "\t\t\tloading: false,",
      "\t\t\t$5",
      "\t\t);",
    ]
  },
  "Redux Selector": {
    "prefix": "rs",
    "body": [
      "import '../../../core/index.dart';",
      "",
      "abstract class ${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Selector {",
      "\tconst ${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}Selector._();",
      "",
      "\tstatic ${TM_FILENAME_BASE/([^.]+).*/${1:/pascalcase}/}State state(AppState state) => state.${TM_FILENAME_BASE/([^.]+).*/${1:/lowercase}/};",
      "",
      "}",
    ]
  },
  "Redux Selector Method": {
    "prefix": "rsm",
    "body": [
      "static final $1 = createSelector1<AppState, $2, $3>(",
      "\t$4,",
      "\t(state) => $0,",
      ");",
    ]
  },
  "State Builder Widget": {
    "prefix": "stateBldr",
    "body": [
      "StateBuilder<$1>(",
      "\tselector: $2,",
      "\tbuilder: (context, ${3:state}) => $0,",
      "),",
    ],
  }
}